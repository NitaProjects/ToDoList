@page "/weather"
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<div class="tiempo">
    <h1>Tiempo</h1>
    <p>Este componente demuestra cómo obtener datos del servidor.</p>
</div>

@if (forecasts == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <div class="forecast-container">
        <table class="table">
            <thead>
                <tr>
                    <th>Fecha</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Sumario</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
